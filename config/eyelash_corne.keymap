#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 100    // default: 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

#define KEYS_R 7 8 9 10 11 12 22 23 24 25 26 27 36 37 38 39 40 41
#define KEYS_L 0 1 2 3 4 5 13 14 15 16 17 18 28 29 30 31 32 33 34
#define KEYS_THUMB 42 43 44 45 46 47

&lt {
    compatible = "zmk,behavior-hold-tap";
    #binding-cells = <2>;
    flavor = "balanced";
    require-prior-idle-ms = <0>;
    tapping-term-ms = <280>;
    quick-tap-ms = <175>;
    bindings = <&mo>, <&kp>;

    hold-trigger-key-positions = <KEYS_R KEYS_L KEYS_THUMB>;
    hold-trigger-on-release;
};

&mt {
    quick-tap-ms = <200>;
    flavor = "tap-preferred";
    tapping-term-ms = <170>;
};

&msc {
    x-input-code = <INPUT_REL_HWHEEL>;
    y-input-code = <INPUT_REL_WHEEL>;
    time-to-max-speed-ms = <150>;
    delay-ms = <0>;
    acceleration-exponent = <2>;
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&soft_off { hold-time-ms = <2000>; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <50>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_R KEYS_THUMB>;
            hold-trigger-on-release;
        };

        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <50>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_L KEYS_THUMB>;
            hold-trigger-on-release;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <10>;
    };

    combos {
        compatible = "zmk,combos";

        softoff {
            bindings = <&soft_off>;
            key-positions = <1 15 29>;
        };
    };

    macros {
        pw0: pw0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(K) &kp I &kp N &kp D &kp EXCL &kp LS(P) &kp O &kp S &kp T &kp EXCL &kp LS(B) &kp A &kp N &kp A &kp N &kp A &kp EXCL &kp N7>;
            label = "PW0";
            wait-ms = <30>;
            tap-ms = <30>;
        };

        pw1: pw1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none &kp LS(K) &kp I &kp N &kp D &kp L &kp E &kp EXCL &kp LS(P) &kp H &kp I &kp L &kp I &kp P &kp S &kp EXCL &kp LS(S) &kp C &kp O &kp T &kp T &kp I &kp E &kp S &kp EXCL &kp N7>;
            label = "PW1";
            wait-ms = <30>;
            tap-ms = <30>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp DEL   &kp Q  &kp W        &kp E         &kp R            &kp T                                &kp UP                &kp Y            &kp U            &kp I            &kp O            &kp SEMICOLON  &none
&kp CAPS  &kp A  &hml LGUI S  &hml LCTRL D  &hml LSHFT F     &kp G                      &kp LEFT  &kp ENTER  &kp RIGHT  &kp H            &hmr RSHFT J     &hmr RCTRL K     &hmr LEFT_GUI L  &kp P          &none
&none     &kp Z  &kp X        &kp C         &hml LEFT_ALT V  &kp B        &kp C_MUTE              &kp DOWN              &kp N            &hmr LEFT_ALT M  &kp COMMA        &kp DOT          &kp FSLH       &none
                              &lt 3 ESCAPE  &lt 1 TAB        &lt 2 SPACE                                                &lt 1 BACKSPACE  &lt 4 ENTER      &kp RIGHT_SHIFT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&none  &none   &kp N7              &kp N8         &kp N9                 &none                                &mmv MOVE_UP                     &kp N6    &kp N7                    &kp N8               &kp N9           &kp N0  &kp BSPC
&none  &kp N0  &hml LGUI NUMBER_4  &hml LCTRL N5  &hml LSHIFT NUMBER_6   &none                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT  &hmr RSHIFT DOWN          &hmr RCTRL UP_ARROW  &hmr RGUI RIGHT  &none   &none
&none  &none   &kp NUMBER_1        &kp NUMBER_2   &mt LEFT_ALT NUMBER_3  &none  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp HOME  &hmr RIGHT_ALT PAGE_DOWN  &kp PAGE_UP          &kp END          &none   &none
                                   &none          &none                  &none                                                                 &none     &none                     &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        symbol_layer {
            display-name = "SYMBOL";
            bindings = <
&none  &none                  &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS  &none                                  &mmv MOVE_UP                     &none      &kp LEFT_BRACE  &kp LBKT           &kp RBKT   &kp RIGHT_BRACE  &none
&none  &kp RIGHT_PARENTHESIS  &kp DOLLAR       &kp PERCENT   &kp CARET             &kp QUESTION           &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp COLON  &kp MINUS       &kp UNDERSCORE     &kp EQUAL  &kp PLUS         &none
&none  &none                  &kp EXCLAMATION  &kp AT_SIGN   &kp HASH              &kp TILDE     &none                    &mmv MOVE_DOWN                   &kp GRAVE  &kp SQT         &kp DOUBLE_QUOTES  &kp BSLH   &kp PIPE         &none
                                               &none         &none                 &none                                                                   &none      &none           &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        utils_layer {
            display-name = "UTILS";
            bindings = <
&bt BT_PRV  &none  &none              &pw0             &pw1              &none                                &mmv MOVE_UP                     &none  &kp F8   &kp F7   &kp F6   &kp F5  &none
&bt BT_NXT  &none  &kp LGUI           &kp LCTRL        &kp LSHIFT        &none                &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &none  &kp F12  &kp F11  &kp F10  &kp F9  &none
&bt BT_CLR  &none  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_PLAY_PAUSE  &none  &kp C_MUTE                    &mmv MOVE_DOWN                   &none  &kp F4   &kp F3   &kp F2   &kp F1  &none
                                      &none            &none             &none                                                                 &none  &none    &none
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        mouse_layer {
            display-name = "MOUSE";
            bindings = <
&none  &none  &none      &none      &none      &none                  &none         &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &none  &none
&none  &none  &none      &none      &none      &none           &none  &none  &none  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_UP  &mmv MOVE_RIGHT  &none  &none
&none  &none  &mkp RCLK  &mkp MCLK  &mkp LCLK  &none  &none           &none         &none           &mkp LCLK       &mkp MCLK     &mkp RCLK        &none  &none
                         &none      &none      &none                                &none           &none           &none
            >;
        };
    };
};
